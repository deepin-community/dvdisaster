From: Carlos Maddela <e7appew@gmail.com>
Date: Sun, 6 Aug 2017 10:37:18 +1000
Description: Add better support for HURD and kFreeBSD systems.
 Hurd still compiles without SCSI layer, however.
Last-Update: 2017-08-06
---
diff --git a/cacheprobe.c b/cacheprobe.c
index 60c55f9..f30f5d3 100644
--- a/cacheprobe.c
+++ b/cacheprobe.c
@@ -68,13 +69,13 @@ int ProbeCacheLineSize()
 
    return cl_size;
 }
 #endif
 
-#ifdef SYS_UNKNOWN
+#if defined(SYS_UNKNOWN) || defined(SYS_HURD)
 int ProbeCacheLineSize()
 {
   return 64;
 }
 #endif
 
 
diff --git a/closure.c b/closure.c
index f408f7a..f4b1893 100644
--- a/closure.c
+++ b/closure.c
@@ -50,7 +50,8 @@ static void get_base_dirs()
    /*** Otherwise try the installation directory. 
 	On Unices this is a hardcoded directory. */
 
-#if defined(SYS_LINUX) || defined(SYS_FREEBSD) || defined(SYS_NETBSD) || defined(SYS_UNKNOWN)
+#if defined(SYS_LINUX) || defined(SYS_FREEBSD) || defined(SYS_KFREEBSD) || \
+    defined(SYS_NETBSD) || defined(SYS_HURD) || defined(SYS_UNKNOWN)
    if(DirStat(BINDIR))
      Closure->binDir = g_strdup(BINDIR);
 
@@ -425,7 +426,8 @@ void InitClosure()
 
    /* Generate a more comprehensive version string */
 
-#if defined(SYS_LINUX) || defined(SYS_FREEBSD) || defined(SYS_NETBSD)
+#if defined(SYS_LINUX) || defined(SYS_FREEBSD) || defined(SYS_KFREEBSD) || \
+    defined(SYS_NETBSD) || defined(SYS_HURD)
   #ifdef HAVE_64BIT
     #define BITNESS_STRING " 64bit"
   #else
diff --git a/scsi-layer.c b/scsi-layer.c
index 515cc93..609cb73 100644
--- a/scsi-layer.c
+++ b/scsi-layer.c
@@ -2005,12 +2005,13 @@ static gint64 query_size(Image *image)
  */
 
 gint64 CurrentMediumSize(int get_blank_size)
-{  Image *image;
+{
+#if defined(SYS_UNKNOWN) || defined(SYS_HURD)
+   return 0;
+#else
+   Image *image;
    gint64 size;
 
-#ifdef SYS_UNKNOWN
-   return 0;
-#endif
 
    image = OpenImageFromDevice(Closure->device);
    if(!image) return 0;
@@ -2051,6 +2052,7 @@ gint64 CurrentMediumSize(int get_blank_size)
    CloseImage(image);
 
    return size;
+#endif
 }
 
 /***
diff --git a/scsi-layer.h b/scsi-layer.h
index cc7d9fc..0706a22 100644
--- a/scsi-layer.h
+++ b/scsi-layer.h
@@ -28,7 +28,7 @@
 #include <linux/cdrom.h>
 #endif
 
-#ifdef SYS_FREEBSD
+#if defined(SYS_FREEBSD) || defined(SYS_KFREEBSD)
 #include <camlib.h>
 #endif
 
@@ -49,19 +49,21 @@
  * Linux already has one 
  */
 
-#ifdef SYS_LINUX
+#if defined(SYS_LINUX)
+
 #define MAX_CDB_SIZE CDROM_PACKET_SIZE
 
 /* Now globally defined for all OSes here */
 //typedef struct request_sense Sense;
-#endif
 
-#ifdef SYS_FREEBSD
+#elif defined(SYS_FREEBSD) || defined(SYS_KFREEBSD)
+
 #define MAX_CDB_SIZE SCSI_MAX_CDBLEN
-#endif
 
-#if defined(SYS_UNKNOWN) || defined(SYS_NETBSD)
+#else /* SYS_UNKNOWN and others. */
+
 #define MAX_CDB_SIZE 16   /* longest possible SCSI command */
+
 #endif
 
 /* 
@@ -101,8 +103,7 @@ typedef struct _DeviceHandle
     */
 #if defined(SYS_LINUX) || defined(SYS_NETBSD)
    int fd;                    /* device file descriptor */
-#endif
-#ifdef SYS_FREEBSD
+#elif defined(SYS_FREEBSD) || defined(SYS_KFREEBSD)
    struct cam_device *camdev; /* camlib device handle */
    union ccb *ccb;
 #endif
diff --git a/scsi-unknown.c b/scsi-unknown.c
index e9183f6..ef54552 100644
--- a/scsi-unknown.c
+++ b/scsi-unknown.c
@@ -25,7 +25,7 @@
 #include "scsi-layer.h"
 #include "udf.h"
 
-#ifdef SYS_UNKNOWN
+#if defined(SYS_UNKNOWN) || defined(SYS_HURD)
 
 /* Dummy routines so that we can compile on unknown architectures
    for which we don't have SCSI support yet. */
@@ -51,4 +51,4 @@ int SendPacket(DeviceHandle *dh, unsigned char *cmd, int cdb_size, unsigned char
    return -1;
 }
 
-#endif /* SYS_UNKNOWN */
+#endif /* defined(SYS_UNKNOWN) || defined(SYS_HURD) */
diff --git a/scripts/bash-based-configure b/scripts/bash-based-configure
index a6037a7..efdfbac 100644
--- a/scripts/bash-based-configure
+++ b/scripts/bash-based-configure
@@ -146,6 +146,15 @@ case "$cfg_uname" in
 	}
 	;;
 
+  GNU*) cfg_system=hurd
+       CFG_SYS_OPTIONS="-DSYS_HURD"
+       CFG_SYS_NAME="-DSYS_NAME=\\\"GNU/Hurd\\\""
+       CFG_EXE_SUFFIX=""
+       function add_linker_flags()
+       {  lflags_return="-L$1 -Wl,-rpath,$1 $2"
+       }
+       ;;
+
   *) cfg_system=unknown-system
         CFG_SYS_OPTIONS="-DSYS_UNKNOWN"
 	CFG_SYS_NAME="-DSYS_NAME=\\\"Unknown\\\""
